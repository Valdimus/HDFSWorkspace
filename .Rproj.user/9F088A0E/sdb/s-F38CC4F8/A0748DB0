{
    "collab_server" : "",
    "contents" : "# Author: Christophe NOUCHET\n# Email: nouchet.christophe@gmail.com\n# Date: 27/08/2017\n# How To Use: You must set HADOOP_HOME and HADOOP_BIN in your Renviron.site\n\nELEMENT_TO_RM_FROM_ENV <- c(\"hadoop_command\", \"hdfs_command\", \"hdfs_dfs_command\", \"hdfs_ls\", \"readHDFSFile\",\n                            \"writeHDFSFile\", \"loadWorkspaceHDFS\", \"saveWorkspaceHDFS\", \"ELEMENT_TO_RM_FROM_ENV\",\n                            \"hdfs_mkdir\", \"getRDirName\", \"getProjectPath\", \"autoSaveWorkspaceHDFS\", \"autoLoadWorkspace\", \"fix_path\")\n\n##' @name fix_path\n##' @description  Ok, file.path don't check if the path already have a '/' at the begining or end of parameters, so you can have double \"/\" ...\nfix_path <- function(path) {\n  return(gsub(\"///\", \"/\", gsub(\"//\", \"/\", path)))\n}\n\ngetRDirName <- function() {\n  rdirname <- Sys.getenv(\"HADOOP_RDIRNAME\")\n  if(rdirname == \"\"){\n    rdirname <- \".rdirname\"\n  }\n  return(rdirname)\n}\n\n##' @name loadWorkspaceHDFS\n##' @description Load Workspace from HDFS\n##' @param filename The filename to load on HDFS\n##' @return boolean\nloadWorkspaceHDFS <- function(filename) {\n  connection <- readHDFSFile(filename = filename)\n  if(connection == FALSE){\n    message(\"No Rdata found on HDFS\")\n    return(FALSE)\n  }\n  message(\"Load Workspace from HDFS: \", filename)\n  load(envir=.GlobalEnv, file = connection)\n  message(\"Load Workspace from HDFS: OK\")\n  close(connection)\n  return(TRUE)\n\n}\n\n##' @name saveWorkspaceHDFS\n##' @description Save your workspace on HDFS\n##' @param filename Path to the file on HDFS\n##' @return boolean\nsaveWorkspaceHDFS <- function(filename) {\n  message(\"Save Workspace on HDFS: \", filename)\n  tmp_filename = paste(filename, as.numeric(as.POSIXlt(Sys.time())), sep=\"-\")\n  connection <- writeHDFSFile(tmp_filename)\n  myenv <- ls(envir=.GlobalEnv, all.names = TRUE)\n\n  for(element in ELEMENT_TO_RM_FROM_ENV)\n  {\n    myenv <- myenv[myenv != element]\n  }\n\n  save(list = myenv, file = connection)\n\n  close(connection)\n  suppressWarnings(system(hdfs_dfs_command(paste(\"-rm\", filename)), ignore.stderr = TRUE, ignore.stdout = TRUE, intern = TRUE))\n  suppressWarnings(system(hdfs_dfs_command(paste(\"-mv\", tmp_filename, filename)), intern=TRUE, ignore.stderr = TRUE, ignore.stdout = TRUE))\n  message(\"Save Workspace on HDFS: OK\")\n  rm(list=ls(envir=globalenv(), all.names = TRUE), envir = globalenv())\n  return(TRUE)\n}\n\n\n##' @name getProjectPath\n##' @description Get the project path\n##' @return string\ngetProjectPath <- function() {\n\n  return(fix_path(file.path(getRDirName(), getwd())))\n}\n\n##' @name autoSaveWorkspaceHDFS\n##' @description Automaticely save the workspace on HDFS\n##' @return boolean\nautoSaveWorkspaceHDFS <- function()\n{\n  project_path <- getProjectPath()\n\n  #Create the directory\n  hdfs_mkdir(project_path)\n\n  # SaveWorkspace\n  return(saveWorkspaceHDFS(fix_path(file.path(project_path, \".Rdata\"))))\n}\n\n##' @name autoLoadWorkspace\n##' @description Automaticely load the workspace from HDFS\nautoLoadWorkspace <- function() {\n  project_path <- fix_path(file.path(getProjectPath(), \".Rdata\"))\n  return(loadWorkspaceHDFS(project_path))\n}\n",
    "created" : 1503848440423.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "603939681",
    "id" : "A0748DB0",
    "lastKnownWriteTime" : 1503848946,
    "last_content_update" : 1503848946806,
    "path" : "~/RHDFSHome/R/main.R",
    "project_path" : "R/main.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}